---
import NextJS from "../components/icons/NextJS.astro"
import Tailwind from "../components/icons/Tailwind.astro"
import HTML from "../components/icons/HTML.astro"
import JS from "../components/icons/JS.astro"
import Typescript from "../components/icons/Typescript.astro"
import Express from "../components/icons/Express.astro"
import NodeJS from "../components/icons/NodeJS.astro"
import PostgreSQL from "../components/icons/PostgreSQL.astro"
import ProjectFooter from "./ProjectFooter.astro"
import React from "../components/icons/React.astro"


const TAGS = {
	HTML: {
		name: "HTML",
		class: "bg-orange-500/80 text-white",
		icon: HTML,
	},
	JS: {
		name: "JavaScript",
		class: "bg-yellow-500 text-black",
		icon: JS,
	},
	TYPESCRIPT: {
		name: "Typescript",
		class: "bg-sky-700 text-white",
		icon: Typescript,
	},
	REACT: {
		name: "React",
		class: "bg-white text-sky-700",
		icon: React,
	},
	NEXT: {
		name: "Next.js",
		class: "bg-black text-white",
		icon: NextJS,
	},
	TAILWIND: {
		name: "Tailwind.css",
		class: "bg-[#003159] text-white",
		icon: Tailwind,
	},
	EXPRESS: {
		name: "Express.js",
		class: "bg-gray-900/50",
		icon: Express,
	},
	NODEJS: {
		name: "Node.js",
		class: "bg-teal-900/50 text-white",
		icon: NodeJS,
	},
	POSTGRESQL: {
		name: "PostgreSQL",
		class: "bg-blue-900/50 text-white",
		icon: PostgreSQL,
	},
}

const PROJECTS = [
	{
		title: "Control de Gastos",
		description: "En este proyecto exploraremos la Context API para gestionar un estado global sin dependencias adicionales. Eliminaremos la necesidad de pasar props entre cada componente adempás  hemos implementando filtros de gastos por categoría, un calendario de fechas para los gastos, gráficas y otras funcionalidades avanzadas.",
		link: "https://earnest-tarsier-d118ef.netlify.app/",
		github: "#",
		image: "./projects/controlGastosImg.png",
		tags: [TAGS.HTML, TAGS.TAILWIND, TAGS.TYPESCRIPT, TAGS.REACT],
	},
	{
		title: "Aplicación de consulta del clima",
		description: "Aplicación en la cual se hace una consulta del clima ingresando la ciudad y país. Además se hace una consulta a un API se puede apreciar  como validar y enviar peticiones hacia API el código y a como leer las respuestas y como mostrar esa información.",
		link: "https://rainbow-pika-c651e5.netlify.app/",
		github: "#",
		image: "./projects/controlClimaPic.png",
		tags: [TAGS.HTML, TAGS.TAILWIND, TAGS.TYPESCRIPT, TAGS.REACT],
	},
	{
		title: "Aplicación de Administración de Pacientes",
		description: "En esa aplicación se permite registrar pacientes y hacer las validaciones correspondientes al momento de ingresar los datos. Además, se hace el use de: Zustand para manejar un estado global de forma muy simple, y React Hook Form, una librería para tener validación y procesamiento en formularios de manera bastante sencilla.",
		link: "https://luxury-squirrel-222063.netlify.app/",
		github: "#",
		image: "./projects/adminPacientes.png",
		tags: [TAGS.HTML, TAGS.TAILWIND, TAGS.TYPESCRIPT, TAGS.REACT],
	},
]
---

{
	PROJECTS.map(({ title, description, tags, image, link, github }) => (
		<article class="flex flex-col space-x-0 space-y-10 group md:flex-row md:space-x-8 md:space-y-0 my-12">
			<div class="w-full md:w-1/2">
				<div class=" h-full relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
					<img
						alt=""
						class="object-cover object-top w-full h-full transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
						loading="lazy"
						src={image}
					/>
				</div>
			</div>

			<div class="w-full md:w-1/2 md:max-w-lg">
				<h3 class="text-2xl font-bold text-white-800 dark:text-gray-100">{title}</h3>
				<div class="flex flex-wrap mt-2">
					<ul class="flex flex-row mb-2 gap-x-4 gap-y-6">
						{tags.map((tag) => (
							<li>
								<span class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}>
									<tag.icon class="size-4" />
									{tag.name}
								</span>
							</li>
						))}
					</ul>

					<div class="mt-2 text-gray-500 dark:text-gray-200">{description}</div>
					<ProjectFooter
						gitHub={github}
						realeseLink={link}
					/>
				</div>
			</div>
		</article>
	))
}
